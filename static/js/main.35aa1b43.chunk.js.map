{"version":3,"sources":["api/unsplash.js","components/ImageCard.js","components/ImageList.js","components/SearchBar.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","ImageCard","props","setSpans","console","log","imageRef","current","clientHeight","height","spans","Math","ceil","setState","state","React","createRef","this","addEventListener","image","description","urls","style","gridRowEnd","ref","src","regular","alt","Component","ImageList","images","map","id","className","SearchBar","term","onFormSubmit","e","preventDefault","onSubmit","type","value","onChange","target","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"gPAGeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,4BACTC,QAAS,CACPC,cAAe,2D,OCgCJC,E,kDAnCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAaRC,SAAW,WACTC,QAAQC,IAAI,EAAKC,SAASC,QAAQC,cAElC,IAAMC,EAAS,EAAKH,SAASC,QAAQC,aAE/BE,EAAQC,KAAKC,KAAKH,EAAS,IAGjC,EAAKI,SAAS,CAAEH,MAAOA,KAnBvB,EAAKI,MAAQ,CAAEJ,MAAO,GAEtB,EAAKJ,SAAWS,IAAMC,YALL,E,qDASnB,WAEEC,KAAKX,SAASC,QAAQW,iBAAiB,OAAQD,KAAKd,Y,oBActD,WACE,MAA8Bc,KAAKf,MAAMiB,MAAjCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,KACrB,OACE,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUN,KAAKH,MAAMJ,QAA7C,SACE,qBAAKc,IAAKP,KAAKX,SAAUmB,IAAKJ,EAAKK,QAASC,IAAKP,U,GA9BjCL,IAAMa,WCUfC,G,MARG,SAAC3B,GAEjB,IAAM4B,EAAS5B,EAAM4B,OAAOC,KAAI,SAACZ,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMa,OAE/B,OAAO,qBAAKC,UAAU,WAAf,SAA2BH,MC+BrBI,E,4MApCbpB,MAAQ,CAAEqB,KAAM,I,EAGhBC,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKpC,MAAMqC,SAAS,EAAKzB,MAAMqB,O,4CAGjC,WAAU,IAAD,OACP,OACE,qBAAKF,UAAU,wBAAf,SACE,sBACEA,UAAU,UAEVM,SAAUtB,KAAKmB,aAHjB,SAKE,sBAAKH,UAAU,QAAf,UACE,iDACA,uBACEO,KAAK,OAELC,MAAOxB,KAAKH,MAAMqB,KAElBO,SAAU,SAACL,GAET,EAAKxB,SAAS,CAAEsB,KAAME,EAAEM,OAAOF,sB,GA5BvB1B,IAAMa,WCgCfgB,E,4MA3Bb9B,MAAQ,CAAEgB,OAAQ,I,EAGlBe,e,uCAAiB,WAAOV,GAAP,eAAAW,EAAA,sEAGQC,EAASC,IAAI,iBAAkB,CAEpDC,OAAQ,CAAEC,MAAOf,KALJ,OAGTgB,EAHS,OAQf,EAAKtC,SAAS,CAAEiB,OAAQqB,EAASC,KAAKC,UARvB,2C,kGAWjB,WACE,OACE,sBAAKpB,UAAU,eAAeX,MAAO,CAAEgC,UAAW,QAAlD,UACE,cAAC,EAAD,CAEEf,SAAUtB,KAAK4B,iBAEjB,cAAC,EAAD,CAAWf,OAAQb,KAAKH,MAAMgB,gB,GAtBpBf,IAAMa,WCFxB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.35aa1b43.chunk.js","sourcesContent":["// This code will contain the API call rather than having it on the App.js\nimport axios from 'axios';\n// The create method will create a new axios instance with prepopulated data\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com/',\n  headers: {\n    Authorization: 'Client-ID 4X1RWjcoO5BPB_6WVEyaGmtWG9EmKAyom5uwjBoQ2Is',\n  },\n});\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props) {\n    super(props);\n    // Initialize state goes inside the constructor!\n    this.state = { spans: 0 };\n    // Create a ref to access the DOM\n    this.imageRef = React.createRef();\n  }\n\n  // Once the component has rendered, it will run this code, you can then invoke another method.\n  componentDidMount() {\n    // listen for load event, use setSpans as a callback\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    console.log(this.imageRef.current.clientHeight);\n    // Get image height from imageRef in the DOM\n    const height = this.imageRef.current.clientHeight;\n    // calculate the number of spans\n    const spans = Math.ceil(height / 10);\n\n    // Set state to spans\n    this.setState({ spans: spans });\n  };\n\n  render() {\n    const { description, urls } = this.props.image;\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <img ref={this.imageRef} src={urls.regular} alt={description} />\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport ImageCard from './ImageCard';\nimport './ImageList.css';\n\nconst ImageList = (props) => {\n  // destucture the needed properties from the data\n  const images = props.images.map((image) => {\n    return <ImageCard key={image.id} image={image} />;\n  });\n  return <div className='img-list'>{images}</div>;\n};\n\nexport default ImageList;\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n  // Initialize state to empty string\n  state = { term: '' };\n\n  // Make sure to use arrow function syntax for callbacks so as to avoid bugs around 'this'\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    // This is invoking the onSubmit prop passed in from the App.js component. Its value is the method onSearchSubmitS\n    this.props.onSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className='search-bar ui segment'>\n        <form\n          className='ui form'\n          // Run the onFormSubmit method on submit\n          onSubmit={this.onFormSubmit}\n        >\n          <div className='field'>\n            <label>Image Search</label>\n            <input\n              type='text'\n              // Set initial value to blank state\n              value={this.state.term}\n              // Set the state to user input\n              onChange={(e) => {\n                // The component will re-render when setState is used\n                this.setState({ term: e.target.value });\n              }}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n// Convention is to put 3rd party import statements before files\nimport unsplash from '../api/unsplash';\nimport ImageList from './ImageList';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component {\n  state = { images: [] };\n\n  // Async/await syntax can be used on class methods\n  onSearchSubmit = async (term) => {\n    // Await for the results with the query term the print the results\n    // Refer to the unsplash api call in separate file\n    const response = await unsplash.get('/search/photos', {\n      // API Options, params will update to the search term them make the search request\n      params: { query: term },\n    });\n\n    this.setState({ images: response.data.results });\n  };\n\n  render() {\n    return (\n      <div className='ui container' style={{ marginTop: '2rem' }}>\n        <SearchBar\n          // This is a method passed as a prop that is passed into the search bar component\n          onSubmit={this.onSearchSubmit}\n        />\n        <ImageList images={this.state.images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}